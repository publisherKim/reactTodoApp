{"ast":null,"code":"import _classCallCheck from \"C:\\\\study\\\\chapter10\\\\immutable-concept\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\study\\\\chapter10\\\\immutable-concept\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\study\\\\chapter10\\\\immutable-concept\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\study\\\\chapter10\\\\immutable-concept\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\study\\\\chapter10\\\\immutable-concept\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\study\\\\chapter10\\\\immutable-concept\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Immutable from 'immutable';\nvar Map = Immutable.Map;\nvar data = Map({\n  a: 1,\n  b: 2\n});\nconsole.log('Map 생성: ', data);\nvar data1 = Map({\n  a: 1,\n  b: 2,\n  c: Map({\n    d: 3,\n    e: 4,\n    f: 5\n  })\n});\nconsole.log('Map 계층구조 생성: ', data1); // 객체 상태가 복잡할 경우에는 fromJS를 통해서 만들자. 최적화보단 fromJS써도 된다.\n\nvar fromJS = Immutable.fromJS;\nvar data2 = fromJS({\n  a: 1,\n  b: 2,\n  c: {\n    d: 3,\n    e: 4,\n    f: 5\n  }\n});\nconsole.log('fromJS: ', data2); // 자바스크립트 객체로 변환\n\nvar deserialized = data2.toJS();\nconsole.log('deserialized: ', deserialized); // 특정키의 값 불러오기\n\nconsole.log(data2.get('a')); // 계층구조가 깊을때 불러오기\n\nconsole.log(data2.getIn(['c', 'd'])); // 값 설정\n\nvar newData = data2.set('a', 4);\nconsole.log(newData.get('a'));\nconsole.log(newData === data);\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(App).apply(this, arguments));\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"immtable concept console\\uC744 \\uD1B5\\uD574 \\uC775\\uD788\\uAE30\");\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["C:\\study\\chapter10\\immutable-concept\\src\\App.js"],"names":["React","Component","Immutable","Map","data","a","b","console","log","data1","c","d","e","f","fromJS","data2","deserialized","toJS","get","getIn","newData","set","App"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,WAAtB;IAEQC,G,GAAQD,S,CAARC,G;AAER,IAAMC,IAAI,GAAGD,GAAG,CAAC;AACfE,EAAAA,CAAC,EAAE,CADY;AAEfC,EAAAA,CAAC,EAAE;AAFY,CAAD,CAAhB;AAIAC,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBJ,IAAxB;AAEA,IAAMK,KAAK,GAAGN,GAAG,CAAC;AAChBE,EAAAA,CAAC,EAAE,CADa;AAEhBC,EAAAA,CAAC,EAAE,CAFa;AAGhBI,EAAAA,CAAC,EAAEP,GAAG,CAAC;AACLQ,IAAAA,CAAC,EAAE,CADE;AAELC,IAAAA,CAAC,EAAE,CAFE;AAGLC,IAAAA,CAAC,EAAE;AAHE,GAAD;AAHU,CAAD,CAAjB;AASAN,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BC,KAA7B,E,CAEA;;IACQK,M,GAAWZ,S,CAAXY,M;AACR,IAAMC,KAAK,GAAGD,MAAM,CAAC;AACnBT,EAAAA,CAAC,EAAE,CADgB;AAEnBC,EAAAA,CAAC,EAAE,CAFgB;AAGnBI,EAAAA,CAAC,EAAE;AACDC,IAAAA,CAAC,EAAE,CADF;AAEDC,IAAAA,CAAC,EAAE,CAFF;AAGDC,IAAAA,CAAC,EAAE;AAHF;AAHgB,CAAD,CAApB;AASAN,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAyBO,KAAzB,E,CAEA;;AACA,IAAMC,YAAY,GAAGD,KAAK,CAACE,IAAN,EAArB;AACAV,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BQ,YAA9B,E,CAGA;;AACAT,OAAO,CAACC,GAAR,CAAYO,KAAK,CAACG,GAAN,CAAU,GAAV,CAAZ,E,CAEA;;AACAX,OAAO,CAACC,GAAR,CAAYO,KAAK,CAACI,KAAN,CAAY,CAAC,GAAD,EAAM,GAAN,CAAZ,CAAZ,E,CAEA;;AACA,IAAMC,OAAO,GAAGL,KAAK,CAACM,GAAN,CAAU,GAAV,EAAe,CAAf,CAAhB;AACAd,OAAO,CAACC,GAAR,CAAYY,OAAO,CAACF,GAAR,CAAY,GAAZ,CAAZ;AACAX,OAAO,CAACC,GAAR,CAAYY,OAAO,KAAKhB,IAAxB;;IAEMkB,G;;;;;;;;;;;;;6BACK;AACP,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0EADF;AAKD;;;;EAPerB,S;;AAUlB,eAAeqB,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport Immutable from 'immutable';\n\nconst { Map } = Immutable;\n\nconst data = Map({\n  a: 1,\n  b: 2\n});\nconsole.log('Map 생성: ', data);\n\nconst data1 = Map({\n  a: 1,\n  b: 2,\n  c: Map({\n    d: 3,\n    e: 4,\n    f: 5\n  })\n});\nconsole.log('Map 계층구조 생성: ', data1);\n\n// 객체 상태가 복잡할 경우에는 fromJS를 통해서 만들자. 최적화보단 fromJS써도 된다.\nconst { fromJS } = Immutable;\nconst data2 = fromJS({\n  a: 1,\n  b: 2,\n  c: {\n    d: 3,\n    e: 4,\n    f: 5\n  }\n});\nconsole.log('fromJS: ',  data2);\n\n// 자바스크립트 객체로 변환\nconst deserialized = data2.toJS();\nconsole.log('deserialized: ', deserialized);\n\n\n// 특정키의 값 불러오기\nconsole.log(data2.get('a'));\n\n// 계층구조가 깊을때 불러오기\nconsole.log(data2.getIn(['c', 'd']));\n\n// 값 설정\nconst newData = data2.set('a', 4);\nconsole.log(newData.get('a'));\nconsole.log(newData === data);\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        immtable concept console을 통해 익히기\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}