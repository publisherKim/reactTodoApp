{"ast":null,"code":"import _toConsumableArray from \"C:\\\\study\\\\chapter10\\\\redux-counter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport * as types from '../actions/ActionTypes';\nvar initialState = {\n  counters: [{\n    color: 'black',\n    number: 0\n  }]\n};\n\nvar counter = function counter() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var counters = state.counters;\n\n  switch (action.type) {\n    case types.CREATE:\n      return {\n        counters: _toConsumableArray(counters).concat([{\n          color: action.color,\n          number: 0\n        }])\n      };\n\n    case types.REMOVE:\n      return {\n        counters: counters.slice(0, counter.length - 1)\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default counter;","map":{"version":3,"sources":["C:\\study\\chapter10\\redux-counter\\src\\reducers\\index.js"],"names":["types","initialState","counters","color","number","counter","state","action","type","CREATE","REMOVE","slice","length"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,wBAAvB;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE,CACR;AAACC,IAAAA,KAAK,EAAE,OAAR;AAAiBC,IAAAA,MAAM,EAAE;AAAzB,GADQ;AADS,CAArB;;AAMA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBL,YAAyB;AAAA,MAAXM,MAAW;AAAA,MACxCL,QADwC,GAC3BI,KAD2B,CACxCJ,QADwC;;AAGhD,UAAOK,MAAM,CAACC,IAAd;AACE,SAAKR,KAAK,CAACS,MAAX;AACE,aAAO;AACLP,QAAAA,QAAQ,qBACHA,QADG,UAEN;AACEC,UAAAA,KAAK,EAAEI,MAAM,CAACJ,KADhB;AAEEC,UAAAA,MAAM,EAAE;AAFV,SAFM;AADH,OAAP;;AASF,SAAKJ,KAAK,CAACU,MAAX;AACE,aAAO;AACLR,QAAAA,QAAQ,EAAEA,QAAQ,CAACS,KAAT,CAAe,CAAf,EAAkBN,OAAO,CAACO,MAAR,GAAiB,CAAnC;AADL,OAAP;;AAGF;AACE,aAAON,KAAP;AAhBJ;AAkBD,CArBD;;AAuBA,eAAeD,OAAf","sourcesContent":["import * as types from '../actions/ActionTypes';\r\n\r\nconst initialState = {\r\n  counters: [\r\n    {color: 'black', number: 0}\r\n  ]\r\n};\r\n\r\nconst counter = (state = initialState, action) => {\r\n  const { counters } = state;\r\n\r\n  switch(action.type) {\r\n    case types.CREATE:\r\n      return {\r\n        counters: [\r\n          ...counters,\r\n          {\r\n            color: action.color,\r\n            number: 0\r\n          }\r\n        ]\r\n      };\r\n    case types.REMOVE:\r\n      return {\r\n        counters: counters.slice(0, counter.length - 1)\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default counter;"]},"metadata":{},"sourceType":"module"}